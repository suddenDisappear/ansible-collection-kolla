---
- name: Install packages
  package:
    name: "{{ docker_sdk_packages | select | list }}"
    cache_valid_time: "{{ apt_cache_valid_time if ansible_facts.os_family == 'Debian' else omit }}"
    update_cache: "{{ True if ansible_facts.os_family == 'Debian' else omit }}"
    state: present
  become: true

- name: Install latest pip in the virtualenv
  pip:
    # NOTE(hrw) pip 19.3 is first version complaining about being run with Python 2
    name: pip>19.3
    virtualenv: "{{ virtualenv }}"
    virtualenv_site_packages: "{{ virtualenv_site_packages }}"
    virtualenv_command: "python{{ host_python_version }} -m venv"
  become: true
  become_user: "{{ docker_sdk_virtualenv_owner }}"
  when: virtualenv is not none

- name: Install docker SDK for python
  pip:
    name: "{{ docker_sdk_pip_packages }}"
    executable: "{{ virtualenv is none | ternary('pip3', omit) }}"
    extra_args: "{% if docker_sdk_upper_constraints_file %}-c {{ docker_sdk_upper_constraints_file }}{% endif %}"
    virtualenv: "{{ virtualenv is none | ternary(omit, virtualenv) }}"
    virtualenv_site_packages: "{{ virtualenv is none | ternary(omit, virtualenv_site_packages) }}"
    virtualenv_command: "{{ virtualenv is none | ternary(omit, 'python' ~ host_python_version ~ ' -m venv') }}"
  become: true
  become_user: "{{ virtualenv is none | ternary(omit, docker_sdk_virtualenv_owner) }}"
  when: not (ansible_facts.distribution_release == "bookworm" and virtualenv is none)
